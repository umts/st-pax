<<<<<<< HEAD
= form_with model: passenger, local: true do |f|
  .form-group
    %label Registration Date:
    = passenger.registration_date
  .form-group
    = f.label :permanent, class: 'form-check-label'
    = f.check_box :permanent, class: 'form-check-input no-doctors-info',
      disabled: !@current_user.admin?
  .form-group
    = f.label :active?
    = f.check_box :active?, {checked: true}, 'active', 'archived'
  - unless passenger.permanent?
    .form-group
      = f.label :registered_with_disability_services,
        'Registered with Disability Services/UHS/Accessible Workplace?',
        class: 'form-check-label'
      = f.check_box :registered_with_disability_services,
        class: 'form-check-input no-doctors-info'
    .form-group
      %label Registration Expires:
      =passenger.rides_expire.try(:strftime, '%m/%d/%Y')
  .form-group
    = f.label :name
    = f.text_field :name, class: 'form-control', required: true
  .form-group
    = f.label :spire
    = f.text_field :spire, class: 'form-control',
      placeholder: '12345678@umass.edu',
      required: true
  .form-group
    = f.label :preferred_name, 'Preferred name (optional)'
    = f.text_field :preferred_name, class: 'form-control'
  .form-group
    = f.label :email
    = f.text_field :email, class: 'form-control', required: true
  .form-group
    = f.label :phone
    = f.text_field :phone, class: 'form-control', required: true
  .form-group
    = f.label :address
    = f.text_field :address, class: 'form-control', required: true
  .form-group
    = f.label :status
    = f.select :status, Passenger::STATUSES, { include_blank: true }, { class: 'form-control' }
  .form-group
    = f.label :mobility_device_id
    = f.select :mobility_device_id,
     options_from_collection_for_select(MobilityDevice.order(:name),
       :id, :name), { include_blank: 'None' }, {class: 'form-control'}
  .form-group
    = f.check_box :needs_assistance, class: 'form-check-input'
    = f.label :needs_assistance, class: 'form-check-label'
  .form-group
    = f.fields_for :doctors_note, @doctors_note do |d|
      .doctors-note-fields
        .form-group
          = d.label :expiration_date, 'How long will the passenger be with us?'
          = d.text_field :expiration_date,
            class: 'registration-datepicker form-control',
            required: true
        .form-group
          = d.label :doctors_name
          = d.text_field :doctors_name, class: 'form-control', required: true
        .form-group
          = d.label :doctors_phone
          = d.text_field :doctors_phone, class: 'form-control'
          %i required if doctor's address is blank
        .form-group
          = d.label :doctors_address
          = d.text_field :doctors_address, class: 'form-control'
          %i required if doctor's phone number is blank
    .form-group
      = f.label :note
      = f.text_area :note, class: 'form-control'
      %i These notes will be available to all dispatchers
      .form-group
        %h2 Terms and conditions
        %p
          Welcome to UMass Special Transportation! Now that you have started the
          registration process, please read through the following information:
        = render 'terms_and_conditions'
      .form-group
        .form-check.form-check-inline
          = check_box_tag :terms_and_conditions, class: 'form-check-input'
          = label_tag :terms_and_conditions,
            'I have read the terms and conditions to the passenger',
            class: 'form-check-label', required: true
    .form-group
      = f.submit 'Submit', class: 'btn btn-primary'
=======
.row
  .col-md-6.offset-md-3
    = bootstrap_form_with model: @passenger, local: true do |form|
      .form-group
        %b Registration date:
        = @passenger.registration_date
      = form.text_field :name
      = form.text_field :spire, placeholder: '12345678@umass.edu'
      = form.text_field :address
      = form.text_field :email
      = form.phone_field :phone
      = form.select :status, Passenger::STATUSES, include_blank: true

      = form.form_group :registration_status,
        label: { text: 'Registration Status' },
        help: "You can select 'pending' if the passenger is temporary but has no verifying information yet" do
        = form.radio_button :active_status, 'pending', class: 'form-check-input'
        = form.radio_button :active_status, 'active', class: 'form-check-input'
        = form.radio_button :active_status, 'archived', class: 'form-check-input'

      - unless @passenger.permanent?
        = form.form_group do
          = form.check_box :has_brochure

      = form.select :mobility_device_id,
        options_from_collection_for_select(MobilityDevice.order(:name),
          :id, :name, @passenger.mobility_device&.id), include_blank: 'None'

      = form.form_group do
        = form.check_box :permanent, disabled: !@current_user.admin?

      .verification-fields
        = form.fields_for :eligibility_verification, @verification do |d|
          = d.select :verifying_agency_id,
            options_for_select(VerifyingAgency.all.map { |agency| [agency.name,
            agency.id, { 'data-needs-contact-info': agency.needs_contact_info? } ] },
            @passenger.eligibility_verification&.verifying_agency&.id),
            help: 'required only for temporary passengers',
            include_blank: true
          - if @passenger.eligibility_verification.blank? && @passenger.temporary?
            - expiration_help = "Rides expire #{@passenger.rides_expire.try(:strftime, '%m/%d/%Y')}"
          = d.text_field :expiration_date,
            class: 'datepicker verification-expires',
            help: expiration_help,
            disabled: @passenger.permanent?
          = d.form_group :contact_information,
            label: { text: 'This verifying agency requires contact information to be entered' },
            class: contact_information_class(@verification),
            help: 'either phone or address is required' do
            = d.text_field :name
            = d.text_field :phone
            = d.text_area :address

      = form.text_area :note, rows: 20
      = form.primary 'Submit'
>>>>>>> 120c70ea487769cfc99cf44fad2948405335c167
